name: AQI Pipeline

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'    # Hourly: update features
    - cron: '0 2 * * *'    # Daily at 02:00 UTC: retrain models
  workflow_dispatch:       # Allow manual trigger

jobs:
  ci-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Lint code
        run: flake8 . || true
      - name: Run tests
        run: pytest || true

  update-features:
    runs-on: ubuntu-latest
    needs: ci-check
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Fetch latest AQI data
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: |
          python -m src.data_acquisition \
            --fetch-current \
            --save-raw data/raw_aqi_data.csv
          python -m src.feature_pipeline \
            --input data/raw_aqi_data.csv \
            --save-local data/processed_aqi_features.csv
      - name: Commit updated features
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add data/*.csv
          git diff-index --quiet HEAD || git commit -m "Update AQI features [skip ci]"
          git push

  perform-eda:
    runs-on: ubuntu-latest
    needs: update-features
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run EDA for Multan
        run: python -m src.eda --input data/processed_aqi_features.csv --city Multan

  train-models:
    runs-on: ubuntu-latest
    needs: update-features
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Train models
        run: |
          python -m src.training_pipeline \
            --input data/processed_aqi_features.csv \
            --save-models models/aqi_model
      - name: Commit updated models
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add models/aqi_model/*.pkl
          git diff-index --quiet HEAD || git commit -m "Retrain AQI models [skip ci]"
          git push

  download-aqi-csv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download AQI CSV
        run: wget -O data/raw_aqi_data.csv "https://your_data_source_url/raw_aqi_data.csv"
